# Given: Two DNA strings s and t (each of length at most 1 kbp).

# Return: All locations of t  as a substring of s.


string = "GATATATGCATATACTT"

motiv = "ATAT"


def find_motiv(string, motiv):
    i = 0
    motiv_len = len(motiv)
    positions = []

    for i in range(0,len(string)):
        j = i+motiv_len
        if string[i:j]== motiv:
            positions.append(i+1)

    return positions

positions = find_motiv(string=string, motiv=motiv)
print(' '.join(map(str, positions)))

# test

string = "TGAAGTCTGAAGTCTGAAGTCGTAGATCGGTAGTGAAGTCTGAAGTCATGAAGTCCGTTCGTGAAGTCCGTGAAGTCTGGGTGAAGTCGTTGAAGTCCAGCGATGAAGTCATGAAGTCTGAAGTCAGGCCACAGGACTTGAAGTCATGAAGTCCTGAAGTCACTGAAGTCCTGAAGTCGGCGTTTGAAGTCAGGCGACCTGAAGTCGTGAAGTCCATGAAGTCAATTGAAGTCTGAAGTCGTGTGAAGTCCATTGAAGTCATCGTGAAGTCTGAAGTCCTGTGAAGTCAAGTGAAGTCGTGAAGTCGCGCCTTGAAGTCTGAAGTCTTGAAGTCATGAAGTCGTGAAGTCAATAAATTTATTGAAGTCTGAAGTCATGCATTCGAACTGAAGTCCTGAAGTCTGAAGTCTGAAGTCGGTGAAGTCTGAAGTCGCCTGAAGTCCTACTTAGCGTTGAAGTCTGAAGTCGGTTGAAGTCTGAAGTCTGAAGTCTTGAAGTCAACTCTGAAGTCAGCCCTGAAGTCCGGCGGTGAAGTCTTGAAGTCAGAGTGAAGTCATGAAGTCTTTTTGAAGTCGAGCTGAAGTCTGAAGTCTGTGAAGTCAGGTCTGAAGTCATGAAGTCAAAATGAAGTCTCTGAAGTCATTGTGTTGAAGTCTGAAGTCCGCTGAAGTCTTAATATTTTGAAGTCTCTAGACATTGAAGTCGATGAAGTCTGAAGTCTGAAGTCCCCATGAAGTCCATGGCCCGTGAAGTCGCTGAAGTCTGAAGTCCTGAAGTCTGTGAAGTCATGAAGTCTTTC"
motiv = "TGAAGTCTG"

positions = find_motiv(string=string, motiv=motiv)
print(' '.join(map(str, positions)))